{"version":3,"sources":["../../src/adapters/RxClient.js"],"names":["Rx","RxClient","client","Client","_client","_tlevel","_disposed","release","connected","Observable","return","connect","fromNodeCallback","map","end","queryText","values","query","flatMap","force","connection","stream","readyState"],"mappings":"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","file":"RxClient.js","sourcesContent":["import assert from 'assert';\nimport pg from 'pg';\nimport * as Rx from 'rx';\nimport { RxClientError } from '../errors';\n\n/**\n * Standalone RxJs adapter for `pg.Client`.\n */\nexport default class RxClient {\n    /**\n     * @param {pg.Client} client\n     */\n    constructor(client) {\n        if (!(client instanceof pg.Client)) {\n            throw new RxClientError('Client must be instance of pg.Client class');\n        }\n\n        /**\n         * @type {pg.Client}\n         * @private\n         */\n        this._client = client;\n        /**\n         * @type {number}\n         * @private\n         */\n        this._tlevel = 0;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._disposed = false;\n    }\n\n    /**\n     * @type {pg.Client}\n     */\n    get client() {\n        return this._client;\n    }\n\n    /**\n     * @type {number}\n     */\n    get tlevel() {\n        return this._tlevel;\n    }\n\n    /**\n     * @type {boolean}\n     */\n    get isDisposed() {\n        return this._disposed;\n    }\n\n    /**\n     * @return {boolean}\n     */\n    get connected() {\n        return this._client.connection.stream.readyState === 'open';\n    }\n\n    release() {\n        typeof this._client.release === 'function' && this._client.release();\n    }\n\n    dispose() {\n        if (!this._disposed) {\n            this.release();\n            this._disposed = true;\n        }\n    }\n\n    /**\n     * @return {Rx.Observable<RxClient>}\n     */\n    connect() {\n        if (this.connected) {\n            return Rx.Observable.return(this);\n        }\n\n        const connect = Rx.Observable.fromNodeCallback(this._client.connect, this._client);\n\n        return connect().map(() => this);\n    }\n\n    /**\n     * @return {Rx.Observable<RxClient>}\n     */\n    end() {\n        const end = Rx.Observable.fromNodeCallback(this._client.end, this._client);\n\n        return end().map(() => this);\n    }\n\n    /**\n     * @param {string} queryText\n     * @param {Array} [values]\n     * @return {Rx.Observable<Object>}\n     */\n    query(queryText, values) {\n        const query = Rx.Observable.fromNodeCallback(this._client.query, this._client);\n\n        return this.connect().flatMap(() => query(queryText, values));\n    }\n\n    /**\n     * @return {Rx.Observable<RxClient>}\n     */\n    begin() {\n        assert(this._tlevel >= 0, 'Current transaction level >= 0');\n\n        let query;\n\n        if (this._tlevel === 0) {\n            query = 'begin';\n        } else {\n            query = `savepoint point_${this._tlevel}`;\n        }\n\n        //noinspection CommaExpressionJS\n        return this.query(query).map(() => (++this._tlevel, this));\n    }\n\n    /**\n     * @param {boolean} [force] Commit transaction with all savepoints.\n     * @return {Rx.Observable<RxClient>}\n     * @throws {RxClientError}\n     */\n    commit(force) {\n        assert(this._tlevel >= 0, 'Current transaction level >= 0');\n\n        if (this._tlevel === 0) {\n            throw new RxClientError('The transaction is not open on the client');\n        }\n\n        if (this._tlevel === 1 || force) {\n            //noinspection CommaExpressionJS\n            return this.query('commit').map(() => (this._tlevel = 0, this));\n        }\n\n        //noinspection CommaExpressionJS\n        return this.query(`release savepoint point_${this._tlevel - 1}`)\n            .map(() => (--this._tlevel, this));\n    }\n\n    /**\n     * @param {boolean} [force] Rollback transaction with all savepoints.\n     * @return {Rx.Observable<RxClient>}\n     * @throws {RxClientError}\n     */\n    rollback(force) {\n        assert(this._tlevel >= 0, 'Current transaction level >= 0');\n\n        if (this._tlevel === 0) {\n            throw new RxClientError('The transaction is not open on the client');\n        }\n\n        if (this._tlevel === 1 || force) {\n            //noinspection CommaExpressionJS\n            return this.query('rollback').map(() => (this._tlevel = 0, this));\n        }\n\n        //noinspection CommaExpressionJS\n        return this.query(`rollback to savepoint point_${this._tlevel - 1}`)\n            .map(() => (--this._tlevel, this));\n    }\n}\n"]}