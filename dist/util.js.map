{"version":3,"sources":["../src/util.js"],"names":["datetime","log","ts","Date","now","date","getDate","slice","getMonth","getFullYear","getHours","getMinutes","getSeconds","getMilliseconds","message","DEBUG","trace","get","callerFile","getFileName","replace","dirname","__dirname","callerFileLine","getLineNumber","args","cyan","grey","blue"],"mappings":";;;;;QAiBgBA,Q,GAAAA,Q;QAoBAC,G,GAAAA,G;;AArChB;;;;AACA;;;;AACA;;AACA;;;;;;AACA;;;;;;;;;AASA;;;;AAIO,SAASD,QAAT,CAAkBE,EAAlB,EAAsB;AACzB,QAAIA,MAAM,IAAV,EAAgB;AACZA,aAAKC,KAAKC,GAAL,EAAL;AACH;;AAED,QAAMC,OAAO,IAAIF,IAAJ,CAASD,EAAT,CAAb;;AAEA,WAAO,CAAE,MAAMG,KAAKC,OAAL,EAAR,EAAyBC,KAAzB,CAA+B,CAAC,CAAhC,IAAqC,GAArC,GACA,CAAE,OAAQF,KAAKG,QAAL,KAAkB,CAA1B,CAAF,EAAkCD,KAAlC,CAAwC,CAAC,CAAzC,CADA,GAC8C,GAD9C,GAEAF,KAAKI,WAAL,EAFA,GAEqB,GAFrB,GAGA,CAAE,MAAMJ,KAAKK,QAAL,EAAR,EAA0BH,KAA1B,CAAgC,CAAC,CAAjC,CAHA,GAGsC,GAHtC,GAIA,CAAE,MAAMF,KAAKM,UAAL,EAAR,EAA4BJ,KAA5B,CAAkC,CAAC,CAAnC,CAJA,GAIwC,GAJxC,GAKA,CAAE,MAAMF,KAAKO,UAAL,EAAR,EAA4BL,KAA5B,CAAkC,CAAC,CAAnC,CALA,GAKwC,GALxC,GAMAF,KAAKQ,eAAL,EANP;AAOH;;AAED;;;;AAIO,SAASZ,GAAT,CAAaa,OAAb,EAA+B;AAClC,QAAI,SAAOC,KAAX,EAAkB;AAAA;;AACd,YAAMC,QAAQ,qBAAWC,GAAX,EAAd;AACA,YAAIC,aAAaF,MAAO,CAAP,EAAWG,WAAX,GAAyBC,OAAzB,CAAiC,eAAKC,OAAL,CAAaC,SAAb,IAA0B,GAA3D,EAAgE,EAAhE,CAAjB;AACA,YAAIC,iBAAiBP,MAAO,CAAP,EAAWQ,aAAX,EAArB;;AAHc,0CADUC,IACV;AADUA,gBACV;AAAA;;AAKd,6BAAQxB,GAAR,kBACI,gBAAMyB,IAAN,CAAW,OAAO1B,UAAP,GAAoB,GAApB,GAA0B,gBAAM2B,IAAN,CAAWT,aAAa,GAAb,GAAmBK,cAA9B,CAA1B,GAA0E,IAArF,CADJ,EAEI,gBAAMK,IAAN,CAAWd,OAAX,CAFJ,SAGOW,IAHP;AAKH;AACJ","file":"util.js","sourcesContent":["import path from 'path';\nimport chalk from 'chalk';\nimport { config } from './';\nimport stackTrace from 'stack-trace';\n/**\n * Library utils.\n *\n * @package rxjs-postgres\n * @author Vladimir Vershinin\n * @license MIT\n * @copyright (c) 2016, Vladimir Vershinin\n */\n\n/**\n * @param {number} [ts]\n * @returns {string} Return UTC date/time string\n */\nexport function datetime(ts) {\n    if (ts == null) {\n        ts = Date.now();\n    }\n\n    const date = new Date(ts);\n\n    return ( '0' + date.getDate() ).slice(-2) + '.' +\n           ( '0' + ( date.getMonth() + 1 ) ).slice(-2) + '.' +\n           date.getFullYear() + ' ' +\n           ( '0' + date.getHours() ).slice(-2) + ':' +\n           ( '0' + date.getMinutes() ).slice(-2) + ':' +\n           ( '0' + date.getSeconds() ).slice(-2) + '.' +\n           date.getMilliseconds();\n}\n\n/**\n * @param {string} message\n * @param {...*} [args]\n */\nexport function log(message, ...args) {\n    if (config.DEBUG) {\n        const trace = stackTrace.get();\n        let callerFile = trace[ 1 ].getFileName().replace(path.dirname(__dirname) + '/', '');\n        let callerFileLine = trace[ 1 ].getLineNumber();\n\n        console.log(\n            chalk.cyan('[ ' + datetime() + ' ' + chalk.grey(callerFile + ':' + callerFileLine) + ' ]'),\n            chalk.blue(message),\n            ...args\n        );\n    }\n}\n"]}